version: '3.3'

services:
  mysql:
    build: ./docker/mysql
    container_name: mysql5.7.8
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./dbfile:/var/lib/mysql
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app

  wp:
    build: ./docker/wordpress
    container_name: wordpress-5.8.2-php8.0-fpm
    depends_on:
      - mysql
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=mysql:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=$MYSQL_DATABASE
      - WORDPRESS_DOMAIN_CURRENT_SITE=$CURRENT_SITE
      - WORDPRESS_DEBUG=$FALSE
      - WORDPRESS_ALLOW_UNFILTERED_UPLOADS=$TRUE
      - WORDPRESS_SUBDOMAIN_INSTALL=$TRUE
      - WORDPRESS_ALLOW_MULTISITE=$TRUE
    volumes:
      - ./wp-multisite:/var/www/html
    networks:
      - app
  
  phpmyadmin:
    build: ./docker/phpmyadmin
    container_name: phpmyadmin
    depends_on:
      - mysql
    restart: always
    environment:
      - PMA_ARBITRARY=1
    ports:
      - 8080:80

  nginx:
    build: ./docker/nginx
    depends_on:
      - wp
    container_name: nginx-1.20.2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    extra_hosts:
      - "react-dev.wp.wellnessliving.local:0.0.0.0"
      - "react-dev1.wp.wellnessliving.local:0.0.0.0"
      - "react-dev2.wp.wellnessliving.local:0.0.0.0"
      - "react-dev3.wp.wellnessliving.local:0.0.0.0"
    volumes:
      - ./wp-multisite:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    working_dir: /var/www/html
    networks:
      - app

volumes:
  wp-multisite:
  dbfile:

networks:
  app:
    driver: bridge